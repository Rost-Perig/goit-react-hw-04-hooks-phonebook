{"version":3,"sources":["componets/InputsForm/InputsForm.module.css","componets/ContactList/ContactList.module.css","componets/ContactData/ContactData.module.css","componets/FindForm/FindForm.module.css","componets/Section/Section.js","componets/InputsForm/InputsForm.js","componets/ContactData/ContactData.js","componets/FindForm/FindForm.js","componets/ContactList/ContactList.js","App.js","index.js"],"names":["module","exports","Section","children","title","className","InputsForm","contactToUp","useState","subscriber","setSubscriber","number","setNumber","id","setId","handleInputChange","e","currentTarget","name","value","uuidv4","reset","s","frame","onSubmit","preventDefault","form","autoComplete","input","type","onChange","pattern","required","btn","ContactData","contactObj","idToUp","textItem","onClick","target","dataset","key","FindForm","transDataToUp","inputValue","setInputValue","onBlur","ContactList","contactArr","idToDel","findData","setFindData","tempContactArr","sort","a","b","localeCompare","data","list","filter","item","toLowerCase","includes","map","listItem","App","contacts","setContacts","useEffect","window","localStorage","getItem","JSON","parse","setItem","stringify","findIndex","alert","prevState","splice","ReactDOM","render","StrictMode","document","getElementById","console","log"],"mappings":"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","file":"static/js/main.817bfa93.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"frame\":\"InputsForm_frame__mXmRk\",\"form\":\"InputsForm_form__3QAbj\",\"input\":\"InputsForm_input__1BNI4\",\"btn\":\"InputsForm_btn__16iPJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__33ETC\",\"listItem\":\"ContactList_listItem__2hRqG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"textItem\":\"ContactData_textItem__3QA3u\",\"btn\":\"ContactData_btn__BDwPv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"frame\":\"FindForm_frame__1KhIm\",\"input\":\"FindForm_input__3ngtu\"};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Section = ({ children, title }) => {\r\n  return (\r\n    <section>\r\n        <div className=\"container\">\r\n        <h2>{title}</h2>\r\n            {children}\r\n         </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n};\r\n\r\nexport default Section;","import { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './InputsForm.module.css';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nexport default function InputsForm({contactToUp}) {\r\n\r\n  const [subscriber, setSubscriber] = useState('');\r\n  const [number, setNumber] = useState('');\r\n  const [id, setId] = useState('');\r\n\r\n\r\n  const handleInputChange = e => {\r\n    switch (e.currentTarget.name) {\r\n      case 'subscriber':\r\n        setSubscriber(e.currentTarget.value);\r\n        setId(uuidv4());\r\n        break;\r\n      case 'number':\r\n        setNumber(e.currentTarget.value)\r\n        break;\r\n      default:\r\n        break;\r\n    };\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    let obj = { subscriber, number, id }\r\n    contactToUp(obj);\r\n    reset();\r\n  };\r\n\r\n  const reset = () => {\r\n    setSubscriber('');\r\n    setNumber('')\r\n  };\r\n\r\n  return (\r\n      <div className={s.frame}>\r\n        <form onSubmit={handleSubmit} className={s.form} autoComplete=\"on\">\r\n            <h3>Name</h3>\r\n            <label >\r\n              <input\r\n                className={s.input}\r\n                type=\"text\"\r\n                name=\"subscriber\"\r\n                value={subscriber}\r\n                onChange={handleInputChange}  \r\n                pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                required\r\n              />\r\n            </label>\r\n            \r\n            <h3>Number</h3>\r\n\r\n            <label>\r\n                <input\r\n                className={s.input}\r\n                type=\"tel\"\r\n                name=\"number\"\r\n                value={number}\r\n                onChange={handleInputChange} \r\n                pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n                required\r\n              />\r\n            </label> \r\n          <button type=\"submit\" className={s.btn}>Add contact</button> \r\n        </form> \r\n      </div>\r\n    )\r\n  };\r\n\r\nInputsForm.propTypes = {\r\n  subscriber: PropTypes.string,\r\n  number: PropTypes.string,\r\n};","import PropTypes from 'prop-types';\r\nimport s from './ContactData.module.css';\r\n\r\nconst ContactData = ({contactObj, idToUp}) => {\r\n\r\n    const deletedId = e => idToUp(e.target.dataset.key);\r\n    const {subscriber, id, number} = contactObj;\r\n    return (\r\n        <>\r\n            <p className={s.textItem}>\r\n                <span>{subscriber}:</span>\r\n                <span>{number}</span>\r\n            </p>\r\n            <button\r\n                className={s.btn}\r\n                type={\"button\"}\r\n                data-key={id}\r\n                onClick={deletedId}>\r\n                Delete\r\n            </button>\r\n        </>\r\n    );\r\n};\r\n\r\nContactData.propTypes = {\r\n  subscriber: PropTypes.string,\r\n  number: PropTypes.string,\r\n  id: PropTypes.string,\r\n};\r\n\r\nexport default ContactData;","import { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './FindForm.module.css';\r\n\r\nconst FindForm = ({transDataToUp}) => {\r\n    const  [inputValue, setInputValue]  = useState('');\r\n\r\n    const findInputChange = e => {\r\n        setInputValue(e.currentTarget.value);\r\n        transDataToUp(e.currentTarget.value);\r\n    };\r\n\r\n    const reset = (e) => setInputValue('');\r\n\r\n    return (\r\n        <div className={s.frame}>\r\n            <h3>Find contacts by name</h3>\r\n            <input\r\n                className={s.input}\r\n                type=\"text\"\r\n                name=\"find\"\r\n                value={inputValue}\r\n                onChange={findInputChange}\r\n                onBlur={reset}\r\n                pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                required\r\n            />\r\n        </div>\r\n    );\r\n\r\n};\r\n\r\nFindForm.propTypes = {\r\n    inputValue: PropTypes.string\r\n};\r\n\r\nexport default FindForm;","// import React, { Component } from 'react';\r\nimport { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './ContactList.module.css'\r\nimport ContactData from '../ContactData';\r\nimport FindForm from '../FindForm';\r\n\r\nconst ContactList = ({contactArr, idToDel}) => {\r\n    const [findData, setFindData] = useState('');\r\n\r\n    const tempContactArr = [...contactArr].sort((a, b) => a.subscriber.localeCompare(b.subscriber));\r\n\r\n    const getFindData = data => setFindData(data);\r\n\r\n     return (\r\n        <div>\r\n\r\n            <FindForm transDataToUp={getFindData} />\r\n                \r\n            <ul className={s.list}>\r\n                 {tempContactArr.filter(item => item.subscriber.toLowerCase().includes(findData.toLowerCase())).map(item => {\r\n                    const { id } = item;\r\n                    return (\r\n                        <li key={id} className={s.listItem}>\r\n                            < ContactData contactObj={item} idToUp={idToDel} />\r\n                        </li>\r\n                    );\r\n                })}\r\n            </ul>\r\n                \r\n        </div>\r\n    );\r\n};\r\n\r\nContactList.propTypes = {\r\n  id: PropTypes.string,\r\n};\r\n\r\nexport default ContactList;","// import React, { Component } from 'react';\nimport { useState, useEffect } from 'react';\nimport './App.css';\nimport Section from './componets/Section';\nimport InputsForm from './componets/InputsForm';\nimport ContactList from './componets/ContactList';\n\n\nfunction App() {\n  const [contacts, setContacts] = useState([]);\n\n  const contactEraser = data => {\n    //как вариант \n    //   let tempArr = [...contacts];\n    //   // let deleteObjIndex = tempArr.findIndex(item => item.id === data);\n    //   // tempArr.splice(deleteObjIndex , 1);\n    // tempArr.splice(tempArr.findIndex(item => item.id === data), 1);\n    // setContacts([...tempArr]);\n\n    //напрямую\n    contacts.splice(contacts.findIndex(item => item.id === data), 1)\n    setContacts([...contacts]);\n  };\n\n  const appStateChanger = data => {\n    if (contacts.findIndex(item => item.subscriber === data.subscriber) !== -1) {\n      return alert(`Абонент с именем ${data.subscriber} уже существует!`);\n    };\n\n    if (contacts.findIndex(item => item.number === data.number) !== -1) {\n      return alert(`Такой номер ${data.number} уже присвоен другому абоненту!`);\n    };\n\n    setContacts(prevState => [...prevState, data]);\n  };\n\n  useEffect(() => {\n    (window.localStorage.getItem('contacts')) && setContacts(JSON.parse(window.localStorage.getItem('contacts')));\n  }, []);\n\n  useEffect(() => {\n    window.localStorage.setItem('contacts', JSON.stringify(contacts));\n  }, [contacts]);\n\n  return (\n    <div className=\"App\">\n      \n      <Section title={\"Phonebook\"}>\n        <InputsForm contactToUp={appStateChanger}/>\n      </Section>\n\n      <Section title={\"Contacts\"}>\n          <ContactList contactArr={contacts} idToDel={contactEraser}/>\n      </Section>\n\n    </div>\n  )\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'modern-normalize/modern-normalize.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n\nconsole.log('Привіт, світ! Життя химерне!');\n"],"sourceRoot":""}